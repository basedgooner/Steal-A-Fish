--SCRIPT F
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local PathfindingService = game:GetService("PathfindingService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local Window = Rayfield:CreateWindow({
   Name = "Steal A Fish - Levi",
   LoadingTitle = "Steal A Fish",
   LoadingSubtitle = "by Levi",
   ConfigurationSaving = {Enabled = false},
   KeySystem = false,
   Theme = "Professional",
})
local stealTab = Window:CreateTab("Steal")
local movementTab = Window:CreateTab("Movement")
local baseTab = Window:CreateTab("Base")
local autoBuyTab = Window:CreateTab("Fish")
local miscTab = Window:CreateTab("Misc") -- Added Misc tab from Script 2
local ShopWindow = Rayfield:CreateWindow({
    Name = "🐟 Steal A Fish - Levi",
    LoadingTitle = "Loading Steal A Fish Script",
    LoadingSubtitle = "by Levi",
    ConfigurationSaving = {Enabled = false},
    KeySystem = false,
    Theme = "Professional",
})
local shopTab = ShopWindow:CreateTab("Shop")

-- Variables from Script 1
local walkSpeed = 40
local speedEnabled = false
local infiniteJumpEnabled = false
local noclipEnabled = false
local autostealEnabled = false
local isScanning = false
local espEnabled = false
local espObjects = {}
local bestAvailablePet = nil
local bestOverallPet = nil
local autostealCoroutine = nil
local timerThreshold = 2
local minPetValue = 0
local tweenSpeed = 50
local autoLockEnabled = false
local autoLockCoroutine = nil
local autoLockMode = "Direct"
local allowedUserIds = {} -- add your user ids here
local isAllowed = false
for _, id in ipairs(allowedUserIds) do
    if player.UserId == id then
        isAllowed = true
        break
    end
end
local blackFrame = nil
local deliveryMode = "Direct"
local selectedClasses = {"Salmon"} -- Initial selection as a table
local autobuyEnabled = false
local autobuyCoroutine = nil
local ignored = setmetatable({}, {__mode = "k"}) -- Weak keys for models
local last_buyers = {} -- uuid -> buyer Player
local autoSellEnabled = false
local autoSellCoroutine = nil
local autoCollectEnabled = false
local autoCollectCoroutine = nil
local minSellValue = 0
local valueMap = {
    ["0"] = 0,
    ["10K"] = 10000,
    ["100K"] = 100000,
    ["1M"] = 1000000,
    ["10M"] = 10000000,
    ["100M"] = 100000000,
    ["1B"] = 1000000000,
    ["10B"] = 10000000000,
    ["100B"] = 100000000000,
    ["500B"] = 500000000000,
    ["1T"] = 1000000000000,
    ["50T"] = 50000000000000,
}

-- Variables from Script 2
local BuyButton = ReplicatedStorage:WaitForChild('voidSky').Remotes.Server.Objects:WaitForChild('BuyButton')
local x2Spawn = workspace.Map.Stand:WaitForChild('x2 Spawn')
local x2ConveyorSpeed = workspace.Map.Stand:WaitForChild('x2 Conveyor Speed')
local x2SpawnNeon = x2Spawn:WaitForChild('Neon')
local x2ConveyorNeon = x2ConveyorSpeed:WaitForChild('Neon')
local x2SpawnPrice = x2Spawn.Info:WaitForChild('InGamePrice')
local x2ConveyorPrice = x2ConveyorSpeed.Info:WaitForChild('InGamePrice')
local buyFishSpawnEnabled = false
local buyFishSpawnCoroutine = nil
local buyConveyorSpeedEnabled = false
local buyConveyorSpeedCoroutine = nil
local processingLock = false
local aimbotEnabled = false
local aimbotPredictionMode = "None" -- Default mode
local targetMode = "Closest To Mouse" -- Default mode
local currentHighlight = nil
local currentTargetPlayer = nil
local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
local PlayerReplication = require(ReplicatedStorage.voidSky.Modules.HitboxClient:WaitForChild("PlayerReplication"))

-- Steal remote from Script 1
local voidSky = ReplicatedStorage:WaitForChild("voidSky")
local remotes = voidSky:WaitForChild("Remotes")
local serverRemotes = remotes:WaitForChild("Server")
local objectsRemotes = serverRemotes:WaitForChild("Objects")
local trashRemotes = objectsRemotes:WaitForChild("Trash")
local stealRemote = trashRemotes:WaitForChild("Steal")
local collectRemote = voidSky.Remotes.Server.Objects.Trash.Collect
local destroyRemote = voidSky.Remotes.Server.Objects.Trash.DestroyTrash
local PurchaseProductCash = ReplicatedStorage.voidSky.Remotes.Server.Important:WaitForChild("PurchaseProductCash")

local TweenOwned = ReplicatedStorage.voidSky.Remotes.Client.Objects.Trash.TweenOwned

-- Functions from Script 2
local function getTarget()
    local best = nil
    local shortest = math.huge
    local localChar = player.Character
    local localHrp = localChar and localChar:FindFirstChild("HumanoidRootPart")
    if not localHrp then return nil end

    local mousePos = Vector2.new(0, 0)
    if targetMode == "Closest To Mouse" then
        local userInput = game:GetService("UserInputService")
        local input = userInput:GetMouseLocation()
        mousePos = Vector2.new(input.X, input.Y)
    end

    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            local hrp = plr.Character:FindFirstChild("HumanoidRootPart")
            local hum = plr.Character:FindFirstChildOfClass("Humanoid")
            if hrp and hum and hum.Health > 0 then
                local pos = hrp.Position
                if aimbotPredictionMode == "Linear" then
                    pos += hrp.Velocity * 0.15
                end

                local screenPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(pos)
                if onScreen then
                    local screenDist = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
                    local dist3d = (localHrp.Position - pos).Magnitude

                    if targetMode == "Closest To Mouse" then
                        if screenDist < shortest then
                            shortest = screenDist
                            best = plr
                        end
                    elseif targetMode == "Nearest By Distance" then
                        if dist3d < shortest then
                            shortest = dist3d
                            best = plr
                        end
                    end
                end
            end
        end
    end

    return best
end

local function updateHighlight(targetChar)
    if not currentHighlight then
        currentHighlight = Instance.new("Highlight")
        currentHighlight.FillColor = Color3.fromRGB(255, 0, 0)
        currentHighlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        currentHighlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        currentHighlight.FillTransparency = 1
        currentHighlight.OutlineTransparency = 1
        currentHighlight.Parent = workspace
    end

    if currentHighlight.Adornee ~= targetChar then
        currentHighlight.Adornee = targetChar
    end

    TweenService:Create(currentHighlight, tweenInfo, {
        FillTransparency = 0.25,
        OutlineTransparency = 0,
    }):Play()
end

local function hideHighlight()
    if currentHighlight then
        TweenService:Create(currentHighlight, tweenInfo, {
            FillTransparency = 1,
            OutlineTransparency = 1,
        }):Play()

        currentTargetPlayer = nil
    end
end

if PlayerReplication and typeof(PlayerReplication) == "table" and PlayerReplication.GetMousePosition then
    local originalGetMousePosition = PlayerReplication.GetMousePosition

    PlayerReplication.GetMousePosition = function(...)
        if not aimbotEnabled then
            hideHighlight()
            return originalGetMousePosition(...)
        end

        local target = getTarget()
        if target and target.Character then
            updateHighlight(target.Character)
            currentTargetPlayer = target

            local hrp = target.Character.HumanoidRootPart
            local pos = hrp.Position

            if aimbotPredictionMode == "Linear" then
                pos += hrp.Velocity * 0.15
            end

            return pos
        else
            hideHighlight()
            return originalGetMousePosition(...)
        end
    end
else
    warn("[Aimbot] PlayerReplication or GetMousePosition is nil. Skipping override.")
end

-- Functions from Script 1
TweenOwned.OnClientEvent:Connect(function(buyer, fishName, uuid, cf, tweenTime, success, tweening)
    if success and buyer then
        last_buyers[uuid] = buyer
    end
end)

local function parseTime(timeText)
    if not timeText or type(timeText) ~= "string" then return math.huge end
    local num = tonumber(timeText:match("(%d+)")) or 0
    if timeText:match("h") then num = num * 3600
    elseif timeText:match("m") then num = num * 60
    elseif timeText:match("s") then -- do nothing, already in seconds
    else return math.huge end
    return num
end

local function getTycoonTimer(tycoonInner)
    local forcefieldFolder = tycoonInner:FindFirstChild("ForcefieldFolder")
    if forcefieldFolder then
        local screen = forcefieldFolder:FindFirstChild("Screen")
        if screen then
            local surfaceGui = screen:FindFirstChild("Screen") and screen.Screen:FindFirstChild("SurfaceGui")
            if surfaceGui then
                local timeLabel = surfaceGui:FindFirstChild("Time")
                if timeLabel and timeLabel:IsA("TextLabel") then
                    return parseTime(timeLabel.Text)
                end
            end
        end
    end
    return math.huge
end

local function findBestPetInTycoon(tycoon)
    local maxValue = -math.huge
    local bestPetInTycoon = nil
    local tempFolder = tycoon:FindFirstChild("Temporary")
    if tempFolder then
        for _, pet in ipairs(tempFolder:GetChildren()) do
            if pet:IsA("Model") and pet:FindFirstChild("Root") then
                local unstealable = false
                for _, desc in ipairs(pet:GetDescendants()) do
                    if desc:IsA("TextLabel") and desc.Text == "UNSTEALABE" then
                        unstealable = true
                        break
                    end
                end
                if unstealable then continue end
                local infoFolder = pet:FindFirstChild("Information")
                if infoFolder then
                    local priceValue = infoFolder:FindFirstChild("Price")
                    if priceValue and priceValue:IsA("NumberValue") then
                        local value = priceValue.Value
                        if value > maxValue and value >= minPetValue then
                            maxValue = value
                            bestPetInTycoon = pet
                        end
                    end
                end
            end
        end
    end
    return bestPetInTycoon, maxValue
end

scanForBestAvailablePet = function()
    local tycoonsFolder = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Tycoons")
    if not tycoonsFolder then
        warn("Tycoons folder not found")
        return nil, 0
    end
    local maxValue = -math.huge
    local bestPet = nil
    for _, tycoon in ipairs(tycoonsFolder:GetChildren()) do
        if tycoon:GetAttribute("Owner") ~= player.Name then
            local tycoonInner = tycoon:FindFirstChild("Tycoon")
            if tycoonInner then
                local timer = getTycoonTimer(tycoonInner)
                if timer <= timerThreshold then
                    local bestInTycoon, valueInTycoon = findBestPetInTycoon(tycoon)
                    if bestInTycoon and valueInTycoon > maxValue then
                        maxValue = valueInTycoon
                        bestPet = bestInTycoon
                    end
                end
            end
        end
    end
    return bestPet, maxValue
end

startScanLoop = function()
    if isScanning then return end
    isScanning = true
    while isScanning do
        local bestAvailable, availableValue = scanForBestAvailablePet()
        bestAvailablePet = bestAvailable
        local bestOverall, overallValue = scanForOverallBestPet()
        bestOverallPet = bestOverall
        if espEnabled and bestOverall and overallValue then
            clearESP()
            createBestESPPet(bestOverall, overallValue)
        end
        task.wait()
    end
    clearESP()
end

-- Hook steal detection
if stealRemote and stealRemote:IsA("RemoteEvent") then
    local mt = getrawmetatable(stealRemote)
    setreadonly(mt, false)
    local oldFireServer = mt.__index[stealRemote].FireServer
    mt.__index[stealRemote].FireServer = newcclosure(function(self, ...)
        return oldFireServer(self, ...)
    end)
    setreadonly(mt, true)
end

-- Delivery handling
local function setupDelivery(char)
    char.ChildAdded:Connect(function(child)
        if child.Name == "StolenObject" then
            local humanoid = char:FindFirstChildOfClass("Humanoid")
            local originalWalkSpeed = 0
            local originalJumpPower = 0
            if humanoid then
                originalWalkSpeed = humanoid.WalkSpeed
                originalJumpPower = humanoid.JumpPower
                humanoid.WalkSpeed = 0
                humanoid.JumpPower = 0
            end
            local tycoonsFolder = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Tycoons")
            if tycoonsFolder then
                for _, tycoon in ipairs(tycoonsFolder:GetChildren()) do
                    if tycoon:GetAttribute("Owner") == player.Name then
                        local collectZone = tycoon:FindFirstChild("Tycoon"):FindFirstChild("CollectZone")
                        if collectZone then
                            local collectPart = collectZone:FindFirstChild("CollectPart")
                            if collectPart then
                                local hrp = char:FindFirstChild("HumanoidRootPart")
                                if hrp then
                                    local nearestDist = nil
                                    local nearestDir = Vector3.new()
                                    for _, p in ipairs(Players:GetPlayers()) do
                                        if p ~= player then
                                            local pchar = p.Character
                                            if pchar then
                                                local phrp = pchar:FindFirstChild("HumanoidRootPart")
                                                if phrp then
                                                    local dist = (hrp.Position - phrp.Position).Magnitude
                                                    if not nearestDist or dist < nearestDist then
                                                        nearestDist = dist
                                                        nearestDir = (hrp.Position - phrp.Position).Unit
                                                    end
                                                end
                                            end
                                        end
                                    end
                                    local height = 50
                                    local offset = Vector3.new(0, 0, 0)
                                    if nearestDist then
                                        height = 50 - math.clamp(nearestDist / 2, 0, 30)
                                        offset = nearestDir * 5
                                    else
                                        height = 25
                                    end
                                    local elevatedTarget = collectPart.Position + Vector3.new(0, height, 0) + offset
                                    if deliveryMode == "Direct" then
                                        hrp.CFrame = CFrame.new(-13.760504722595215, 17.080080032348633, 381.9714660644531)
                                        Rayfield:Notify({
                                            Title = "Notification",
                                            Content = "Bypassing anticheat - waiting 6 seconds",
                                            Duration = 5,
                                        })
                                        -- Spin during wait
                                        local spinning = true
                                        local spinConnection
                                        spinConnection = RunService.Heartbeat:Connect(function()
                                            if spinning and hrp and hrp.Parent then
                                                hrp.CFrame = hrp.CFrame * CFrame.Angles(0, math.rad(15), 0)
                                            end
                                        end)
                                        task.wait(6.25)
                                        spinning = false
                                        if spinConnection then spinConnection:Disconnect() end
                                        -- TP directly to collectzone
                                        hrp.CFrame = CFrame.new(collectPart.Position + Vector3.new(0, 3, 0)) * hrp.CFrame.Rotation
                                    end
                                    if humanoid then
                                        humanoid.WalkSpeed = originalWalkSpeed
                                        humanoid.JumpPower = originalJumpPower
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end)
end

if player.Character then
    setupDelivery(player.Character)
end

player.CharacterAdded:Connect(function(char)
    setupDelivery(char)
    char.ChildAdded:Connect(function(child)
        if child.Name == "StolenObject" and autostealEnabled and not isAllowed then
            blackFrame = Instance.new("Frame")
            blackFrame.Parent = player.PlayerGui
            blackFrame.BackgroundColor3 = Color3.new(0,0,0)
            blackFrame.Size = UDim2.new(1,0,1,0)
            blackFrame.Position = UDim2.new(0,0,0,0)
            blackFrame.ZIndex = 9999
        end
    end)
    char.ChildRemoved:Connect(function(child)
        if child.Name == "StolenObject" and blackFrame then
            blackFrame:Destroy()
            blackFrame = nil
        end
    end)
end)

UserInputService.JumpRequest:Connect(function()
    if infiniteJumpEnabled and player.Character then
        local hum = player.Character:FindFirstChildOfClass("Humanoid")
        if hum and hum:GetState() ~= Enum.HumanoidStateType.Seated then
            hum:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

movementTab:CreateToggle({
    Name = "Speed Hack",
    CurrentValue = false,
    Callback = function(state)
        speedEnabled = state
    end,
})

movementTab:CreateSlider({
    Name = "Walk Speed",
    Range = {16, 100},
    Increment = 1,
    CurrentValue = walkSpeed,
    Callback = function(v)
        walkSpeed = v
    end,
})

movementTab:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Callback = function(state)
        infiniteJumpEnabled = state
    end,
})

movementTab:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Callback = function(state)
        noclipEnabled = state
    end,
})

RunService.Stepped:Connect(function()
    if noclipEnabled and player.Character then
        for _, part in ipairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
    if speedEnabled and player.Character then
        local hum = player.Character:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.WalkSpeed = walkSpeed
        end
    end
end)

clearESP = function()
    for _, obj in pairs(espObjects) do
        if obj then obj:Destroy() end
    end
    espObjects = {}
end

local function startRainbow(obj, prop)
    local cycleTime = 4
    task.spawn(function()
        while obj and obj.Parent do
            local h = (tick() % cycleTime) / cycleTime
            obj[prop] = Color3.fromHSV(h, 1, 1)
            RunService.Heartbeat:Wait()
        end
    end)
end

createBestESPPet = function(pet, value)
    local root = pet:FindFirstChild("Root") or pet:FindFirstChild("RootPart") or pet:FindFirstChildWhichIsA("BasePart")
    if not root then return end
    local hl = Instance.new('Highlight')
    hl.Name = "PetESP"
    hl.Adornee = pet
    hl.OutlineColor = Color3.new(0, 0, 0)
    hl.FillTransparency = 0.25
    hl.OutlineTransparency = 0
    hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    hl.Parent = pet
    startRainbow(hl, "FillColor")
    startRainbow(hl, "OutlineColor")
    local gui = Instance.new('BillboardGui')
    gui.Name = "PetESP_Label"
    gui.Adornee = root
    gui.AlwaysOnTop = true
    gui.Size = UDim2.new(0, 400, 0, 80)
    gui.StudsOffset = Vector3.new(0, 6.5, 0)
    gui.Parent = pet
    local n = Instance.new('TextLabel')
    n.Size = UDim2.new(1, 0, 0.5, 0)
    n.Position = UDim2.new(0.5, 0, 0.35, 0)
    n.AnchorPoint = Vector2.new(0.5, 0.5)
    n.BackgroundTransparency = 1
    n.Font = Enum.Font.GothamBlack
    n.TextSize = 22
    n.Text = pet.Name:upper()
    n.TextXAlignment = Enum.TextXAlignment.Center
    n.Parent = gui
    local ns = Instance.new('UIStroke')
    ns.Thickness = 4.5
    ns.Color = Color3.new(0, 0, 0)
    ns.Parent = n
    local nso = Instance.new('UIStroke')
    nso.Thickness = 5.5
    nso.Color = Color3.new(1, 1, 1)
    nso.Parent = n
    local gL = Instance.new('TextLabel')
    gL.Size = UDim2.new(1, 0, 0.5, 0)
    gL.Position = UDim2.new(0.5, 0, 0.75, 0)
    gL.AnchorPoint = Vector2.new(0.5, 0.5)
    gL.BackgroundTransparency = 1
    gL.Font = Enum.Font.GothamBlack
    gL.TextSize = 32
    gL.Text = '$' .. formatNumber(value)
    gL.TextXAlignment = Enum.TextXAlignment.Center
    gL.Parent = gui
    local gs = Instance.new('UIStroke')
    gs.Thickness = 6
    gs.Color = Color3.new(0, 0, 0)
    gs.Parent = gL
    local gso = Instance.new('UIStroke')
    gso.Thickness = 7
    gso.Color = Color3.new(1, 1, 1)
    gso.Parent = gL
    startRainbow(n, 'TextColor3')
    startRainbow(gL, 'TextColor3')
    table.insert(espObjects, hl)
    table.insert(espObjects, gui)
end

function formatNumber(num)
    if num == nil then return "0" end
    return tostring(num):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")
end

stealTab:CreateSlider({
    Name = "Min Pet Value",
    Range = {0, 10000000},
    Increment = 1,
    CurrentValue = minPetValue,
    Callback = function(v)
        minPetValue = v
    end,
})

stealTab:CreateDropdown({
    Name = "Delivery Mode",
    Options = {"Direct"},
    CurrentOption = {"Direct"},
    MultipleOptions = false,
    Callback = function(v)
        deliveryMode = v[1]
    end,
})

scanForOverallBestPet = function()
    local tycoonsFolder = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Tycoons")
    if not tycoonsFolder then
        warn("Tycoons folder not found")
        return nil, 0
    end
    local maxValue = -math.huge
    local bestPet = nil
    for _, tycoon in ipairs(tycoonsFolder:GetChildren()) do
        if tycoon:GetAttribute("Owner") ~= player.Name then
            local bestInTycoon, valueInTycoon = findBestPetInTycoon(tycoon)
            if bestInTycoon and valueInTycoon > maxValue then
                maxValue = valueInTycoon
                bestPet = bestInTycoon
            end
        end
    end
    return bestPet, maxValue
end

local function getLocalTycoonInner()
    local tycoonsFolder = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Tycoons")
    if tycoonsFolder then
        for _, tycoon in ipairs(tycoonsFolder:GetChildren()) do
            if tycoon:GetAttribute("Owner") == player.Name then
                return tycoon:FindFirstChild("Tycoon")
            end
        end
    end
    return nil
end

local function getLocalTycoon()
    local tycoonsFolder = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Tycoons")
    if tycoonsFolder then
        for _, tycoon in ipairs(tycoonsFolder:GetChildren()) do
            if tycoon:GetAttribute("Owner") == player.Name then
                return tycoon
            end
        end
    end
    return nil
end

local function getPetsInOwnTycoon(minValue, excludeUnstealable)
    local ownTycoon = getLocalTycoon()
    if not ownTycoon then return {} end
    local tempFolder = ownTycoon:FindFirstChild("Temporary")
    if not tempFolder then return {} end
    local pets = {}
    for _, pet in ipairs(tempFolder:GetChildren()) do
        if pet:IsA("Model") and pet:FindFirstChild("Root") then
            local unstealable = false
if excludeUnstealable then
    for _, desc in ipairs(pet:GetDescendants()) do
        if desc:IsA("TextLabel") and desc.Text == "UNSTEALABE" then
            unstealable = true
            break
        end
    end
    if unstealable then continue end
end
            local infoFolder = pet:FindFirstChild("Information")
            if infoFolder then
                local priceValue = infoFolder:FindFirstChild("Price")
                if priceValue and priceValue:IsA("NumberValue") then
                    local value = priceValue.Value
                    if value >= minValue then
                        table.insert(pets, pet)
                    end
                end
            end
        end
    end
    return pets
end

local function autoSellLoop()
    while autoSellEnabled do
        if not autoSellEnabled then break end -- Exit immediately if toggle is off
        task.wait(0.05)
        local char = player.Character
        if char and char:FindFirstChild("StolenObject") then
            continue
        end
        local pets = getPetsInOwnTycoon(minSellValue, false)
        for _, pet in ipairs(pets) do
            if not autoSellEnabled then break end -- Check toggle state in inner loop
            local char = player.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if hrp then
                local root = pet:FindFirstChild("Root")
                if root then
                    local trashID = pet:GetAttribute("Trash_ID")
                    if trashID then
                        local success, err = pcall(function()
                            stealRemote:FireServer(player, trashID)
                            destroyRemote:FireServer(trashID)
                        end)
                        if not success then
                            Rayfield:Notify({
                                Title = "Auto Sell Error",
                                Content = "Failed to sell pet: " .. tostring(err),
                                Duration = 4,
                                Type = "error"
                            })
                        end
                    end
                end
            end
            task.wait(0.1) -- Add small delay to prevent rapid firing
        end
    end
end

local function getMaxCollectSlots()
    local leaderstats = player:FindFirstChild("leaderstats")
    if not leaderstats then return 10 end
    local rebirth = leaderstats:FindFirstChild("Rebirth")
    if not rebirth then return 10 end
    local rebValue = tonumber(rebirth.Value) or 0
    if rebValue < 4 then
        return 10
    elseif rebValue == 4 then
        return 12
    elseif rebValue == 5 then
        return 14
    elseif rebValue == 6 then
        return 15
    elseif rebValue == 7 then
        return 16
    elseif rebValue == 9 then
        return 18
    elseif rebValue == 10 then
        return 20
    else
        return 10  -- default for unspecified
    end
end

local function autoCollectLoop()
    while autoCollectEnabled do
        local char = player.Character
        local hrp = char and char:FindFirstChild("HumanoidRootPart")
        if not char or not hrp then
            task.wait(0.3)
            continue
        end
        if char:FindFirstChild("StolenObject") then
            task.wait(0.3)
            continue
        end
        local maxSlots = getMaxCollectSlots()
        for i = 1, maxSlots do
            if not autoCollectEnabled then break end
            local success, err = pcall(function()
                collectRemote:FireServer(i)
            end)
            if not success then
                Rayfield:Notify({
                    Title = "Auto Collect Error",
                    Content = "Failed to collect slot " .. i .. ": " .. tostring(err),
                    Duration = 4,
                    Type = "error"
                })
            end
            task.wait(0.25) -- Delay between each remote call
        end
        task.wait(0.15) -- Buffer between full slot cycles
    end
end

stealTab:CreateToggle({
    Name = "Autosteal Best Pet",
    CurrentValue = false,
    Callback = function(state)
        autostealEnabled = state
        if state then
            task.spawn(startScanLoop)
        else
            isScanning = false
        end
    end,
})

stealTab:CreateButton({
    Name = "TP to Best Pet",
    Callback = function()
        local best, _ = scanForOverallBestPet()
        if best then
            local char = player.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if hrp then
                local root = best:FindFirstChild("Root") or best:FindFirstChild("RootPart") or best:FindFirstChildWhichIsA("BasePart")
                if root then
                    hrp.CFrame = root.CFrame * CFrame.new(0, 3, 0)
                else
                    Rayfield:Notify({
                        Title = "Notification",
                        Content = "No root part found for pet",
                        Duration = 5,
                    })
                end
            end
        else
            Rayfield:Notify({
                Title = "Notification",
                Content = "No pet found",
                Duration = 5,
            })
        end
    end,
})

stealTab:CreateToggle({
    Name = "Best Pet ESP",
    CurrentValue = false,
    Callback = function(state)
        espEnabled = state
        if state then
            if not isScanning then
                task.spawn(function()
                    startScanLoop()
                end)
            end
        else
            clearESP()
            isScanning = false
        end
    end,
})

baseTab:CreateDropdown({
    Name = "Auto Lock Mode",
    Options = {"Direct", "Lerp"},
    CurrentOption = {"Direct"},
    MultipleOptions = false,
    Callback = function(v)
        autoLockMode = v[1]
    end,
})

baseTab:CreateToggle({
    Name = "Auto Lock",
    CurrentValue = false,
    Callback = function(state)
        autoLockEnabled = state
    end,
})

baseTab:CreateDropdown({
    Name = "Min Sell Value",
    Options = {"0", "10K", "100K", "1M", "10M", "100M", "1B", "10B", "100B", "500B", "1T", "50T"},
    CurrentOption = {"0"},
    MultipleOptions = false,
    Callback = function(v)
        minSellValue = valueMap[v[1]]
    end,
})

baseTab:CreateToggle({
    Name = "Auto Sell",
    CurrentValue = false,
    Callback = function(state)
        autoSellEnabled = state
        if state then
            autoSellCoroutine = task.spawn(autoSellLoop)
        else
            if autoSellCoroutine then task.cancel(autoSellCoroutine) autoSellCoroutine = nil end
        end
    end,
})

baseTab:CreateToggle({
    Name = "Auto Collect",
    CurrentValue = false,
    Callback = function(state)
        autoCollectEnabled = state
        if state then
            autoCollectCoroutine = task.spawn(autoCollectLoop)
        else
            if autoCollectCoroutine then task.cancel(autoCollectCoroutine) autoCollectCoroutine = nil end
        end
    end,
})

autoBuyTab:CreateDropdown({
    Name = "Select Fish",
    Options = {
        "Salmon", "Tralalero", "Tung Sahur", "Boneca Ambalabu", "Skeleton Fish",
        "Turtle", "Crab", "Blobfish", "Clownfish", "Saw Shark", "Nuke Fish",
        "Megalodon", "Whale", "Bananini", "Gold Fish", "Manta Ray", "Loch Ness",
        "Kraken", "Infected Whale", "Robolodon", "Axolotl", "Sea Eater", "Bloop",
        "Bloopvoid", "Mouth Titan", "World Eater", "Leviathan", "Skeleton Bloop",
        "Skeleton Eater", "El Skeleton Maja", "Spiderfish", "Hungry Tung", "The Moon",
        "SCP", "Udindun Eater", "Train Eater", "Shark"
    },
    CurrentOption = {"Salmon"},
    MultipleOptions = true,
    Callback = function(newSelection)
        selectedClasses = newSelection
    end,
})

autoBuyTab:CreateToggle({
    Name = "Auto Buy",
    CurrentValue = false,
    Callback = function(state)
        autobuyEnabled = state
    end,
})

-- Toggles from Script 2 (added to Misc tab)
miscTab:CreateToggle({
    Name = 'Aimbot (All Tools)',
    CurrentValue = false,
    Callback = function(state)
        aimbotEnabled = state
    end,
})

miscTab:CreateDropdown({
    Name = "Aimbot Target Mode",
    Options = {"Closest To Mouse", "Nearest By Distance"},
    CurrentOption = {"Closest To Mouse"},
    MultipleOptions = false,
    Callback = function(option)
        targetMode = option[1]
    end,
})

miscTab:CreateDropdown({
    Name = "Aimbot Prediction",
    Options = {"None", "Linear"},
    CurrentOption = {"None"},
    MultipleOptions = false,
    Callback = function(option)
        aimbotPredictionMode = option[1]
    end,
})

miscTab:CreateToggle({
    Name = 'Buy 2x Fish Spawn',
    CurrentValue = false,
    Callback = function(state)
        buyFishSpawnEnabled = state
    end,
})

miscTab:CreateToggle({
    Name = 'Buy 2x Conveyor Speed',
    CurrentValue = false,
    Callback = function(state)
        buyConveyorSpeedEnabled = state
    end,
})

local itemsToBuy = {
    "Silver Slap",
    "Flintlock",
    "Golden Slap",
    "Blunderbuss",
    "Diamond Slap",
    "Freeze Gun",
    "Ice Slap",
    "Taser",
    "Invisible Cape",
    "Void Slap"
}

local function hasGear(name)
    for _, item in ipairs(player.Backpack:GetChildren()) do
        if item.Name == name then return true end
    end
    for _, item in ipairs(player.Character:GetChildren()) do
        if item.Name == name then return true end
    end
    return false
end

local buyAllEnabled = false
shopTab:CreateToggle({
    Name = "Buy All",
    CurrentValue = false,
    Callback = function(state)
        buyAllEnabled = state
        if state then
            local bought = {}
            for _, itemName in ipairs(itemsToBuy) do
                if not hasGear(itemName) then
                    local success, err = pcall(function()
                        PurchaseProductCash:InvokeServer(itemName)
                    end)
                    if success then
                        table.insert(bought, itemName)
                    end
                    task.wait(0.1)
                end
            end
            if #bought > 0 then
                Rayfield:Notify({
                    Title = "Purchased",
                    Content = "Bought: " .. table.concat(bought, ", "),
                    Duration = 5
                })
            else
                Rayfield:Notify({
                    Title = "No Purchases",
                    Content = "You already own all items.",
                    Duration = 4
                })
            end
        end
    end
})

for _, itemName in ipairs(itemsToBuy) do
    shopTab:CreateButton({
        Name = itemName,
        Callback = function()
            if hasGear(itemName) then
                Rayfield:Notify({
                    Title = "Already Owned",
                    Content = "You already have: " .. itemName,
                    Duration = 4,
                    Type = "error"
                })
                return
            end
            local success, err = pcall(function()
                PurchaseProductCash:InvokeServer(itemName)
            end)
            if success then
                Rayfield:Notify({
                    Title = "Purchased",
                    Content = "Bought: " .. itemName,
                    Duration = 4
                })
            else
                Rayfield:Notify({
                    Title = "Error",
                    Content = "Failed to buy: " .. itemName,
                    Duration = 4,
                    Type = "error"
                })
            end
        end
    })
end

local isStallingForSteal = false
local isPausingAutosteal = false

local function masterLoop()
    while true do
        local acted = false
        -- Number one priority: StolenObject in character
        local char = player.Character
        if char and char:FindFirstChild("StolenObject") then
            if not isStallingForSteal then
                Rayfield:Notify({
                    Title = "Priority Stall",
                    Content = "Number one priority: Delivering stolen object. Stalling other actions.",
                    Duration = 5,
                })
                isStallingForSteal = true
            end
            task.wait(0.1)
            continue
        else
            if isStallingForSteal then
                Rayfield:Notify({
                    Title = "Resuming",
                    Content = "Steal complete. Resuming other priorities.",
                    Duration = 5,
                })
                isStallingForSteal = false
            end
        end
        -- Priority 1: Auto Lock
        if autoLockEnabled then
            local char = player.Character
            local humanoid = char and char:FindFirstChildOfClass("Humanoid")
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if humanoid and hrp then
                local tycoonInner = getLocalTycoonInner()
                if tycoonInner then
                    local timer = getTycoonTimer(tycoonInner)
                    if timer < 5 then
                        local forcefieldFolder = tycoonInner:FindFirstChild("ForcefieldFolder")
                        if forcefieldFolder then
                            local buttons = forcefieldFolder:FindFirstChild("Buttons")
                            if buttons then
                                local forceFieldBuy = buttons:FindFirstChild("ForceFieldBuy")
                                if forceFieldBuy and forceFieldBuy.PrimaryPart then
                                    local targetPos = forceFieldBuy.PrimaryPart.Position + Vector3.new(0, 3.2, 0)
                                    if autoLockMode == "Direct" then
                                        hrp.CFrame = CFrame.new(targetPos) * hrp.CFrame.Rotation
                                    elseif autoLockMode == "Lerp" then
                                        local startPos = hrp.Position
                                        local distance = (targetPos - startPos).Magnitude
                                        local duration = distance / tweenSpeed
                                        local tween = TweenService:Create(hrp, TweenInfo.new(duration), {CFrame = CFrame.new(targetPos) * hrp.CFrame.Rotation})
                                        tween:Play()
                                        tween.Completed:Wait()
                                    end
                                    acted = true
                                end
                            end
                        end
                    end
                end
            end
        end
        if acted then 
            task.wait(0.5)
            continue 
        end
        -- Priority 2: Auto Steal
        if autostealEnabled then
            local skipAutosteal = false
            if autoLockEnabled then
                local ownTycoonInner = getLocalTycoonInner()
                if ownTycoonInner then
                    local ownTimer = getTycoonTimer(ownTycoonInner)
                    if ownTimer <= 15 then
                        if not isPausingAutosteal then
                            Rayfield:Notify({
                                Title = "Autosteal Paused",
                                Content = "Pausing autosteal 15 seconds in advance due to autolock enabled.",
                                Duration = 5,
                            })
                            isPausingAutosteal = true
                        end
                        skipAutosteal = true
                    else
                        if isPausingAutosteal then
                            Rayfield:Notify({
                                Title = "Autosteal Resumed",
                                Content = "Resuming autosteal as autolock not imminent.",
                                Duration = 5,
                            })
                            isPausingAutosteal = false
                        end
                    end
                end
            end
            if not skipAutosteal then
                local char = player.Character
                if not (char and char:FindFirstChild("StolenObject")) then
                    local best = bestAvailablePet
                    if best and best.Parent then
                        local tycoonOuter = best.Parent.Parent
                        local tycoonInner = tycoonOuter:FindFirstChild("Tycoon")
                        if tycoonInner then
                            local timer = getTycoonTimer(tycoonInner)
                            if timer <= timerThreshold then
                                local hrp = char and char:FindFirstChild("HumanoidRootPart")
                                if hrp then
                                    local root = best:FindFirstChild("Root") or best:FindFirstChild("RootPart") or best:FindFirstChildWhichIsA("BasePart")
                                    if root then
                                        hrp.AssemblyLinearVelocity = Vector3.zero
                                        hrp.CFrame = root.CFrame * CFrame.new(0, 3, 0)
                                        task.wait()

                                        local ownerName = best:GetAttribute("Trash_Owner")
                                        if ownerName and ownerName ~= player.Name then
                                            local ownerPlayer = Players:FindFirstChild(ownerName)
                                            if ownerPlayer then
                                                local trashID = best:GetAttribute("Trash_ID")
                                                if trashID then
                                                    stealRemote:FireServer(ownerPlayer, trashID)
                                                end
                                            end
                                        end
                                        acted = true
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if acted then 
            task.wait()
            continue 
        end
        -- Priority 3: 2x Fish Spawn
        if buyFishSpawnEnabled then
            local char = player.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if hrp then
                local text = x2SpawnPrice.Text
                if text == '500,000$' or not string.find(text, 'Time') then
                    hrp.CFrame = CFrame.new(x2SpawnNeon.Position + Vector3.new(0, 3, 0))
                    task.wait(0.1)
                    BuyButton:FireServer(x2Spawn)
                    acted = true
                end
            end
        end
        if acted then 
            task.wait(0.5)
            continue 
        end
        -- Priority 4: 2x Conveyor Speed
        if buyConveyorSpeedEnabled then
            local char = player.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if hrp then
                local text = x2ConveyorPrice.Text
                if text == '100,000$' or not string.find(text, 'Time') then
                    hrp.CFrame = CFrame.new(x2ConveyorNeon.Position + Vector3.new(0, 3, 0))
                    task.wait(0.1)
                    BuyButton:FireServer(x2ConveyorSpeed)
                    acted = true
                end
            end
        end
        if acted then 
            task.wait(0.5)
            continue 
        end

if autobuyEnabled then
    local char = player.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if hrp then
        local objectsFolder = workspace:FindFirstChild("RayFiltered") and workspace.RayFiltered:FindFirstChild("Objects")
        if objectsFolder then
            for _, model in ipairs(objectsFolder:GetChildren()) do
                if model:IsA("Model") and table.find(selectedClasses, model:GetAttribute("Class")) and not ignored[model] and (not last_buyers[model.Name] or last_buyers[model.Name] ~= player) then
                    local root = model:FindFirstChild("Root") or model:FindFirstChild("RootPart") or model:FindFirstChildWhichIsA("BasePart")
                    if root and root.Size.X > 0 and root.Size.Y > 0 and root.Size.Z > 0 then
                        local initialCFrame = root.CFrame
                        hrp.CFrame = root.CFrame * CFrame.new(0, 3, 0)
                        task.wait()
                        collectRemote:FireServer(model.Name)
                        task.spawn(function()
                            task.wait(2)
                            if model and model.Parent and root and root.CFrame == initialCFrame then
                                ignored[model] = true
                            end
                        end)
                        acted = true
                        break
                    end
                end
            end
        end
    end
end

        if acted then 
            task.wait(0.5) 
        else 
            task.wait(0.1) 
        end
    end
end

task.spawn(masterLoop)
