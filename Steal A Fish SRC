local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local PathfindingService = game:GetService("PathfindingService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local Window = Rayfield:CreateWindow({
   Name = "Steal A Fish - Levi",
   LoadingTitle = "Steal A Fish",
   LoadingSubtitle = "by Levi",
   ConfigurationSaving = {Enabled = false},
   KeySystem = false,
   Theme = "Professional",
})
local stealTab = Window:CreateTab("Steal")
local movementTab = Window:CreateTab("Movement")
local visualsTab = Window:CreateTab("Visuals")
local baseTab = Window:CreateTab("Base")
local autoBuyTab = Window:CreateTab("Buy (Beta)")

local walkSpeed = 40
local speedEnabled = false
local infiniteJumpEnabled = false
local noclipEnabled = false
local autostealEnabled = false
local isScanning = false
local espEnabled = false
local espObjects = {}
local bestAvailablePet = nil
local bestOverallPet = nil
local autostealCoroutine = nil
local timerThreshold = 2
local minPetValue = 0
local tweenSpeed = 50
local autoLockEnabled = false
local autoLockCoroutine = nil
local autoLockMode = "Lerp"
local allowedUserIds = {} -- add your user ids here
local isAllowed = false
for _, id in ipairs(allowedUserIds) do
if player.UserId == id then
isAllowed = true
break
end
end
local blackFrame = nil
local deliveryMode = "Direct"
local selectedClasses = {"Salmon"} -- Initial selection as a table
local autobuyEnabled = false
local autobuyCoroutine = nil
local ignored = setmetatable({}, {__mode = "k"}) -- Weak keys for models

-- Steal remote
local voidSky = ReplicatedStorage:WaitForChild("voidSky")
local remotes = voidSky:WaitForChild("Remotes")
local serverRemotes = remotes:WaitForChild("Server")
local objectsRemotes = serverRemotes:WaitForChild("Objects")
local trashRemotes = objectsRemotes:WaitForChild("Trash")
local stealRemote = trashRemotes:WaitForChild("Steal")
local collectRemote = voidSky.Remotes.Server.Objects.Trash.Collect


local function parseTime(timeText)
if not timeText or type(timeText) ~= "string" then return math.huge end
local num = tonumber(timeText:match("(%d+)")) or 0
if timeText:match("h") then num = num * 3600
elseif timeText:match("m") then num = num * 60
elseif timeText:match("s") then -- do nothing, already in seconds
else return math.huge end
return num
end

local function getTycoonTimer(tycoonInner)
local forcefieldFolder = tycoonInner:FindFirstChild("ForcefieldFolder")
if forcefieldFolder then
local screen = forcefieldFolder:FindFirstChild("Screen")
if screen then
local surfaceGui = screen:FindFirstChild("Screen") and screen.Screen:FindFirstChild("SurfaceGui")
if surfaceGui then
local timeLabel = surfaceGui:FindFirstChild("Time")
if timeLabel and timeLabel:IsA("TextLabel") then
return parseTime(timeLabel.Text)
end
end
end
end

return math.huge
end


local function findBestPetInTycoon(tycoon)
local maxValue = -math.huge
local bestPetInTycoon = nil

local tempFolder = tycoon:FindFirstChild("Temporary")
if tempFolder then
for _, pet in ipairs(tempFolder:GetChildren()) do
if pet:IsA("Model") and pet:FindFirstChild("Root") then
local unstealable = false
for _, desc in ipairs(pet:GetDescendants()) do
if desc:IsA("TextLabel") and desc.Text == "UNSTEALABE" then
unstealable = true
break
end
end
if unstealable then continue end
local infoFolder = pet:FindFirstChild("Information")
if infoFolder then
local priceValue = infoFolder:FindFirstChild("Price")
if priceValue and priceValue:IsA("NumberValue") then
local value = priceValue.Value
if value > maxValue and value >= minPetValue then
maxValue = value
bestPetInTycoon = pet
end
end
end
end
end
end

return bestPetInTycoon, maxValue
end
scanForBestAvailablePet = function()

local tycoonsFolder = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Tycoons")
if not tycoonsFolder then
warn("Tycoons folder not found")
return nil, 0
end

local maxValue = -math.huge
local bestPet = nil

for _, tycoon in ipairs(tycoonsFolder:GetChildren()) do
if tycoon:GetAttribute("Owner") ~= player.Name then
local tycoonInner = tycoon:FindFirstChild("Tycoon")
if tycoonInner then
local timer = getTycoonTimer(tycoonInner)
if timer <= timerThreshold then
local bestInTycoon, valueInTycoon = findBestPetInTycoon(tycoon)
if bestInTycoon and valueInTycoon > maxValue then
maxValue = valueInTycoon
bestPet = bestInTycoon
end
end
end
end
end

return bestPet, maxValue
end

startScanLoop = function()
    if isScanning then return end
    isScanning = true
    while isScanning do
        local bestAvailable, availableValue = scanForBestAvailablePet()
        bestAvailablePet = bestAvailable
        local bestOverall, overallValue = scanForOverallBestPet()
        bestOverallPet = bestOverall
        if espEnabled and bestOverall and overallValue then
            clearESP()
            createBestESPPet(bestOverall, overallValue)
        end
        task.wait()
    end
    clearESP()
end

-- Hook steal detection
if stealRemote and stealRemote:IsA("RemoteEvent") then
local mt = getrawmetatable(stealRemote)
setreadonly(mt, false)
local oldFireServer = mt.__index[stealRemote].FireServer
mt.__index[stealRemote].FireServer = newcclosure(function(self, ...)

return oldFireServer(self, ...)
end)
setreadonly(mt, true)
end

-- Delivery handling
local function setupDelivery(char)
char.ChildAdded:Connect(function(child)
if child.Name == "StolenObject" then
local humanoid = char:FindFirstChildOfClass("Humanoid")
local originalWalkSpeed = 0
local originalJumpPower = 0
if humanoid then
originalWalkSpeed = humanoid.WalkSpeed
originalJumpPower = humanoid.JumpPower
humanoid.WalkSpeed = 0
humanoid.JumpPower = 0
end
local tycoonsFolder = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Tycoons")
if tycoonsFolder then
for _, tycoon in ipairs(tycoonsFolder:GetChildren()) do
if tycoon:GetAttribute("Owner") == player.Name then
local collectZone = tycoon:FindFirstChild("Tycoon"):FindFirstChild("CollectZone")
if collectZone then
local collectPart = collectZone:FindFirstChild("CollectPart")
if collectPart then
local hrp = char:FindFirstChild("HumanoidRootPart")
if hrp then
local nearestDist = nil
local nearestDir = Vector3.new()
for _, p in ipairs(Players:GetPlayers()) do
if p ~= player then
local pchar = p.Character
if pchar then
local phrp = pchar:FindFirstChild("HumanoidRootPart")
if phrp then
local dist = (hrp.Position - phrp.Position).Magnitude
if not nearestDist or dist < nearestDist then
    nearestDist = dist
    nearestDir = (hrp.Position - phrp.Position).Unit
end
end
end
end
end
end
local height = 50
local offset = Vector3.new(0, 0, 0)
if nearestDist then
height = 50 - math.clamp(nearestDist / 2, 0, 30)
offset = nearestDir * 5
else
height = 25
end
local elevatedTarget = collectPart.Position + Vector3.new(0, height, 0) + offset
if deliveryMode == "Direct" then

hrp.CFrame = CFrame.new(-13.760504722595215, 17.080080032348633, 381.9714660644531)
Rayfield:Notify({
   Title = "Notification",
   Content = "Bypassing anticheat - waiting 6 seconds",
   Duration = 5,
})

-- Spin during wait
local spinning = true
local spinConnection
spinConnection = RunService.Heartbeat:Connect(function()
    if spinning and hrp and hrp.Parent then
        hrp.CFrame = hrp.CFrame * CFrame.Angles(0, math.rad(15), 0)
    end
end)

task.wait(6.25)

spinning = false
if spinConnection then spinConnection:Disconnect() end

-- TP directly to collectzone
hrp.CFrame = CFrame.new(collectPart.Position + Vector3.new(0, 3, 0)) * hrp.CFrame.Rotation

end

if humanoid then
humanoid.WalkSpeed = originalWalkSpeed
humanoid.JumpPower = originalJumpPower
end
end
end
end
end
end
end
return
end)
end

if player.Character then
setupDelivery(player.Character)
end

player.CharacterAdded:Connect(function(char)
setupDelivery(char)
char.ChildAdded:Connect(function(child)
if child.Name == "StolenObject" and autostealEnabled and not isAllowed then
blackFrame = Instance.new("Frame")
blackFrame.Parent = player.PlayerGui
blackFrame.BackgroundColor3 = Color3.new(0,0,0)
blackFrame.Size = UDim2.new(1,0,1,0)
blackFrame.Position = UDim2.new(0,0,0,0)
blackFrame.ZIndex = 9999
end
end)
char.ChildRemoved:Connect(function(child)
if child.Name == "StolenObject" and blackFrame then
blackFrame:Destroy()
blackFrame = nil
end
end)
end)

UserInputService.JumpRequest:Connect(function()
if infiniteJumpEnabled and player.Character then
local hum = player.Character:FindFirstChildOfClass("Humanoid")
if hum and hum:GetState() ~= Enum.HumanoidStateType.Seated then
hum:ChangeState(Enum.HumanoidStateType.Jumping)
end
end
end)

movementTab:CreateToggle({
   Name = "Speed Hack",
   CurrentValue = false,
   Callback = function(state)
      speedEnabled = state
   end,
})

movementTab:CreateSlider({
   Name = "Walk Speed",
   Range = {16, 100},
   Increment = 1,
   CurrentValue = walkSpeed,
   Callback = function(v)
      walkSpeed = v
   end,
})

movementTab:CreateToggle({
   Name = "Infinite Jump",
   CurrentValue = false,
   Callback = function(state)
      infiniteJumpEnabled = state
   end,
})

movementTab:CreateToggle({
   Name = "Noclip",
   CurrentValue = false,
   Callback = function(state)
      noclipEnabled = state
   end,
})

RunService.Stepped:Connect(function()
if noclipEnabled and player.Character then
for _, part in ipairs(player.Character:GetDescendants()) do
if part:IsA("BasePart") then
part.CanCollide = false
end
end
end
if speedEnabled and player.Character then
local hum = player.Character:FindFirstChildOfClass("Humanoid")
if hum then
hum.WalkSpeed = walkSpeed
end
end
end)

clearESP = function()
for _, obj in pairs(espObjects) do
if obj then obj:Destroy() end
end
espObjects = {}
end

local function startRainbow(obj, prop)
local cycleTime = 4
task.spawn(function()
while obj and obj.Parent do
local h = (tick() % cycleTime) / cycleTime
obj[prop] = Color3.fromHSV(h, 1, 1)
RunService.Heartbeat:Wait()
end
end)
end

createBestESPPet = function(pet, value)
local root = pet:FindFirstChild("Root") or pet:FindFirstChild("RootPart") or pet:FindFirstChildWhichIsA("BasePart")
if not root then return end

local hl = Instance.new('Highlight')
hl.Name = "PetESP"
hl.Adornee = pet
hl.OutlineColor = Color3.new(0, 0, 0)
hl.FillTransparency = 0.25
hl.OutlineTransparency = 0
hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
hl.Parent = pet
startRainbow(hl, "FillColor")
startRainbow(hl, "OutlineColor")

local gui = Instance.new('BillboardGui')
gui.Name = "PetESP_Label"
gui.Adornee = root
gui.AlwaysOnTop = true
gui.Size = UDim2.new(0, 400, 0, 80)
gui.StudsOffset = Vector3.new(0, 6.5, 0)
gui.Parent = pet

local n = Instance.new('TextLabel')
n.Size = UDim2.new(1, 0, 0.5, 0)
n.Position = UDim2.new(0.5, 0, 0.35, 0)
n.AnchorPoint = Vector2.new(0.5, 0.5)
n.BackgroundTransparency = 1
n.Font = Enum.Font.GothamBlack
n.TextSize = 22
n.Text = pet.Name:upper()
n.TextXAlignment = Enum.TextXAlignment.Center
n.Parent = gui

local ns = Instance.new('UIStroke')
ns.Thickness = 4.5
ns.Color = Color3.new(0, 0, 0)
ns.Parent = n

local nso = Instance.new('UIStroke')
nso.Thickness = 5.5
nso.Color = Color3.new(1, 1, 1)
nso.Parent = n

local gL = Instance.new('TextLabel')
gL.Size = UDim2.new(1, 0, 0.5, 0)
gL.Position = UDim2.new(0.5, 0, 0.75, 0)
gL.AnchorPoint = Vector2.new(0.5, 0.5)
gL.BackgroundTransparency = 1
gL.Font = Enum.Font.GothamBlack
gL.TextSize = 32
gL.Text = '$' .. formatNumber(value)
gL.TextXAlignment = Enum.TextXAlignment.Center
gL.Parent = gui

local gs = Instance.new('UIStroke')
gs.Thickness = 6
gs.Color = Color3.new(0, 0, 0)
gs.Parent = gL

local gso = Instance.new('UIStroke')
gso.Thickness = 7
gso.Color = Color3.new(1, 1, 1)
gso.Parent = gL

startRainbow(n, 'TextColor3')
startRainbow(gL, 'TextColor3')

table.insert(espObjects, hl)
table.insert(espObjects, gui)
end

function formatNumber(num)
if num == nil then return "0" end
return tostring(num):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")
end

visualsTab:CreateToggle({
   Name = "Best Pet ESP",
   CurrentValue = false,
   Callback = function(state)
      espEnabled = state
      if state then
         if not isScanning then
            task.spawn(function()
               startScanLoop()
            end)
         end
      else
         clearESP()
         isScanning = false
      end
   end,
})


stealTab:CreateSlider({
   Name = "Min Pet Value",
   Range = {0, 10000000},
   Increment = 1,
   CurrentValue = minPetValue,
   Callback = function(v)
      minPetValue = v
   end,
})

stealTab:CreateDropdown({
   Name = "Delivery Mode",
   Options = {"Direct"},
   CurrentOption = {"Direct"},
   MultipleOptions = false,
   Callback = function(v)
      deliveryMode = v[1]
   end,
})

scanForOverallBestPet = function()
local tycoonsFolder = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Tycoons")
if not tycoonsFolder then
warn("Tycoons folder not found")
return nil, 0
end

local maxValue = -math.huge
local bestPet = nil

for _, tycoon in ipairs(tycoonsFolder:GetChildren()) do
if tycoon:GetAttribute("Owner") ~= player.Name then
local bestInTycoon, valueInTycoon = findBestPetInTycoon(tycoon)
if bestInTycoon and valueInTycoon > maxValue then
maxValue = valueInTycoon
bestPet = bestInTycoon
end
end
end

return bestPet, maxValue
end

local function getLocalTycoonInner()
local tycoonsFolder = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("Tycoons")
if tycoonsFolder then
for _, tycoon in ipairs(tycoonsFolder:GetChildren()) do
if tycoon:GetAttribute("Owner") == player.Name then
return tycoon:FindFirstChild("Tycoon")
end
end
end
return nil
end
local function autostealLoop()
    while autostealEnabled do
        -- Check for AutoLock override
        if autoLockEnabled then
            local tycoonInner = getLocalTycoonInner()
            if tycoonInner then
                local timer = getTycoonTimer(tycoonInner)
                if timer and timer < 10 then
                    Rayfield:Notify({
                       Title = "Notification",
                       Content = "Autosteal paused - AutoLock is handling Forcefield",
                       Duration = 5,
                    })
                    repeat
                        task.wait(1)
                        timer = getTycoonTimer(tycoonInner)
                    until not autoLockEnabled or timer >= 10
                end
            end
        end

        local char = player.Character
        if char and char:FindFirstChild("StolenObject") then
            task.wait()
            continue
        end

        local best = bestAvailablePet
        if best and best.Parent then
            local tycoonOuter = best.Parent.Parent
            local tycoonInner = tycoonOuter:FindFirstChild("Tycoon")
            if tycoonInner then
                local timer = getTycoonTimer(tycoonInner)
                if timer <= timerThreshold then
                    local hrp = char and char:FindFirstChild("HumanoidRootPart")
                    if hrp then
                        local root = best:FindFirstChild("Root") or best:FindFirstChild("RootPart") or best:FindFirstChildWhichIsA("BasePart")
                        if root then
                            hrp.CFrame = root.CFrame * CFrame.new(0, 3, 0)
                            task.wait()
                            local ownerName = best:GetAttribute("Trash_Owner")
                            if ownerName and ownerName ~= player.Name then
                                local ownerPlayer = Players:FindFirstChild(ownerName)
                                if ownerPlayer then
                                    local trashID = best:GetAttribute("Trash_ID")
                                    if trashID then
                                        stealRemote:FireServer(ownerPlayer, trashID)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        task.wait()
    end
end


stealTab:CreateToggle({
   Name = "Autosteal Best Pet",
   CurrentValue = false,
   Callback = function(state)
      autostealEnabled = state
      if state then
         task.spawn(startScanLoop)
         autostealCoroutine = task.spawn(autostealLoop)
      else
         isScanning = false
         if autostealCoroutine then task.cancel(autostealCoroutine) autostealCoroutine = nil end
      end
   end,
})

stealTab:CreateButton({
   Name = "TP to Best Pet",
   Callback = function()
      local best, _ = scanForOverallBestPet()
      if best then
         local char = player.Character
         local hrp = char and char:FindFirstChild("HumanoidRootPart")
         if hrp then
            local root = best:FindFirstChild("Root") or best:FindFirstChild("RootPart") or best:FindFirstChildWhichIsA("BasePart")
            if root then
               hrp.CFrame = root.CFrame * CFrame.new(0, 3, 0)
            else
               Rayfield:Notify({
                  Title = "Notification",
                  Content = "No root part found for pet",
                  Duration = 5,
               })
            end
         end
      else
         Rayfield:Notify({
            Title = "Notification",
            Content = "No pet found",
            Duration = 5,
         })
      end
   end,
})

local function autoLockLoop()
while autoLockEnabled do
local char = player.Character
local humanoid = char and char:FindFirstChildOfClass("Humanoid")
local hrp = char and char:FindFirstChild("HumanoidRootPart")
if humanoid and hrp then
local tycoonInner = getLocalTycoonInner()
if tycoonInner then
local timer = getTycoonTimer(tycoonInner)
if timer >= 5 then
task.wait()
continue
end
local forcefieldFolder = tycoonInner:FindFirstChild("ForcefieldFolder")
if forcefieldFolder then
local buttons = forcefieldFolder:FindFirstChild("Buttons")
if buttons then
local forceFieldBuy = buttons:FindFirstChild("ForceFieldBuy")
if forceFieldBuy and forceFieldBuy.PrimaryPart then
local targetPos = forceFieldBuy.PrimaryPart.Position + Vector3.new(0, 3.2, 0)
if autoLockMode == "Direct" then
hrp.CFrame = CFrame.new(targetPos) * hrp.CFrame.Rotation
elseif autoLockMode == "Lerp" then
local startPos = hrp.Position
local distance = (targetPos - startPos).Magnitude
local duration = distance / tweenSpeed
local startTime = tick()
local connection
connection = RunService.Heartbeat:Connect(function()
local elapsed = tick() - startTime
local alpha = math.clamp(elapsed / duration, 0, 1)
local newPos = startPos:Lerp(targetPos, alpha)
hrp.CFrame = CFrame.new(newPos) * hrp.CFrame.Rotation
if alpha >= 1 then
connection:Disconnect()
end
end)
end
end
end
end
end
end
task.wait()
end
end

baseTab:CreateDropdown({
   Name = "Auto Lock Mode",
   Options = {"Lerp", "Direct"},
   CurrentOption = {"Lerp"},
   MultipleOptions = false,
   Callback = function(v)
      autoLockMode = v[1]
   end,
})

baseTab:CreateToggle({
   Name = "Auto Lock",
   CurrentValue = false,
   Callback = function(state)
      autoLockEnabled = state
      if state then
         autoLockCoroutine = task.spawn(autoLockLoop)
      else
         if autoLockCoroutine then task.cancel(autoLockCoroutine) autoLockCoroutine = nil end
      end
   end,
})

local function autobuyLoop()
    while autobuyEnabled do
        local char = player.Character
        local hrp = char and char:FindFirstChild("HumanoidRootPart")
        if not hrp then
            task.wait(0.1)
            continue
        end

        local objectsFolder = workspace:FindFirstChild("RayFiltered")
            and workspace.RayFiltered:FindFirstChild("Objects")
        if not objectsFolder then
            task.wait(0.1)
            continue
        end

        for _, model in ipairs(objectsFolder:GetChildren()) do
            if not autobuyEnabled then break end

            if model:IsA("Model") and table.find(selectedClasses, model:GetAttribute("Class")) and not ignored[model] then
                local root = model:FindFirstChild("Root") or model:FindFirstChild("RootPart") or model:FindFirstChildWhichIsA("BasePart")
                if root and root.Size.X > 0 and root.Size.Y > 0 and root.Size.Z > 0 then
                    local initialCFrame = root.CFrame
                    hrp.CFrame = root.CFrame * CFrame.new(0, 3, 0)
                    collectRemote:FireServer(model.Name)

                    task.spawn(function()
                        task.wait(2)
                        if model and model.Parent and root and root.CFrame == initialCFrame then
                            ignored[model] = true
                        end
                    end)

                    task.wait(0.5) -- Slow down between transactions
                end
            end
        end

        task.wait(0.1) -- Buffer between scans
    end
end

autoBuyTab:CreateDropdown({
   Name = "Select Fish",
   Options = {
      "Salmon", "Tralalero", "Tung Sahur", "Boneca Ambalabu", "Skeleton Fish",
      "Turtle", "Crab", "Blobfish", "Clownfish", "Saw Shark", "Nuke Fish",
      "Megalodon", "Whale", "Bananini", "Gold Fish", "Manta Ray", "Loch Ness",
      "Kraken", "Infected Whale", "Robolodon", "Axolotl", "Sea Eater", "Bloop",
      "Bloopvoid", "Mouth Titan", "World Eater", "Leviathan", "Skeleton Bloop",
      "Skeleton Eater", "El Skeleton Maja", "Spiderfish", "Hungry Tung", "The Moon",
      "SCP", "Udindun Eater", "Train Eater", "Shark"
   },
   CurrentOption = {"Salmon"},
   MultipleOptions = true,
   Callback = function(newSelection)
      selectedClasses = newSelection
   end,
})

autoBuyTab:CreateToggle({
   Name = "Auto Buy",
   CurrentValue = false,
   Callback = function(state)
      autobuyEnabled = state
      if state and not autobuyCoroutine then
         autobuyCoroutine = task.spawn(autobuyLoop)
      elseif not state and autobuyCoroutine then
         task.cancel(autobuyCoroutine)
         autobuyCoroutine = nil
      end
   end,
})
